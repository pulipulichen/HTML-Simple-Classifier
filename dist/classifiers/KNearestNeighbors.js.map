{"version":3,"sources":["webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.yaml","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.less","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.html","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.less?41cd","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.html?3016","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.js","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.js?fa1d","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.less?ae79","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.vue","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.yaml?608e","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighborsMethodsBuild.js","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighborsMethodsShow.js","webpack:///./src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighborsMethodsTest.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA,kCAAkC,MAAM,8BAA8B,UAAU,uBAAuB;AACvG;AACA;;;;;;;;;;;;ACJA;AACA,kCAAkC,mBAAO,CAAC,8GAAyD;AACnG;AACA;AACA,cAAc,QAAS,UAAU,kFAAkF;AACnH;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD,eAAe,uBAAuB;AACtC,mBAAmB,SAAS,mCAAmC,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,gBAAgB,4DAA4D;AAC5E,mBAAmB,mDAAmD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC,mBAAmB,mBAAmB;AACtC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA,sBAAsB,uCAAuC;AAC7D,sBAAsB,iBAAiB;AACvC,mBAAmB,mBAAmB;AACtC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC,mBAAmB,uBAAuB;AAC1C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9FA;;AAEA;AACA,cAAc,mBAAO,CAAC,4iBAA8Q;AACpS;AACA,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,gIAAmE;AACrF,+CAA+C;AAC/C;AACA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACXf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,W;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,OAAO;;AAEP;AACA,GAAG;AACH;AACA;;AAE8E;AAC9E,iFAA6B;;AAE+C;AAC5E,gFAA4B;;AAEgD;AAC5E,gFAA4B;;AAEb,gF;;;;;;;;;;;;AC7Cf;AAAA;AAAA,wCAAoE,CAAgB,qJAAG,EAAC,C;;;;;;;;;;;;ACAxF;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6G;AACzC;AACL;AACwC;;;AAGvG;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,sFAAM;AACR,EAAE,yGAAM;AACR,EAAE,kHAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACoM;AACpM,WAAW,qNAAM,iBAAiB,6NAAM;;AAExC;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;AC3Cf;AAAA;AAAA;AAAA;AAAmQ,CAAgB,qUAAG,EAAC,C;;;;;;;;;;;;ACAvR;AAAA;AAAwB;;AAET;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAG;AACxB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,8CAAG;AAClB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrJA;AAAA,UAAU,UAAU;AACpB,kBAAkB,mBAAO,CAAC,wFAAuB;AACjD;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,uCAAuC;;AAE3D;AACA;AACA,+BAA+B,0BAA0B,oBAAoB,oBAAoB;AACjG,mBAAmB,sBAAsB,IAAI,qBAAqB;AAClE;AACA,QAAQ,wCAAwC,mBAAmB,iBAAiB;AACpF;;AAEA;AACA;AACA,oBAAoB,wCAAwC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA,QAAQ,4BAA4B;AACpC,IAAI;AACJ,IAAI;AACJ;AACA;AACA;;AAEA;AACA,+CAA+C,oBAAoB,OAAO,iBAAiB,MAAM;AACjG,SAAS;AACT,+CAA+C,oBAAoB,MAAM,IAAI,MAAM;AACnF;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA,MAAM;AACN,MAAM;AACN;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA,CAAC;;;;;;;;;;;;;AC3KD;AAAA;AAAwB;AACxB;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8CAAG;;AAErB;;AAEA;;AAEA;AACA;AACA,C","file":"classifiers/KNearestNeighbors.js","sourcesContent":["module.exports = function (Component) {\n  Component.options.__i18n = Component.options.__i18n || []\n  Component.options.__i18n.push('{\"en\":{\"TEST_MESSAGE\":\"Test Message\"},\"zh-TW\":{\"TEST_MESSAGE\":\"測試訊息\"}}')\n  delete Component.options._Ctor\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"KNearestNeighbors.less\"}]);\n// Exports\nmodule.exports = exports;\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"DecisionTree\" }, [\n    _c(\"div\", { staticClass: \"field\" }, [\n      _c(\"label\", { attrs: { for: \"KNearestNeighborsOptionsK\" } }, [\n        _vm._v(_vm._s(_vm.$t(\"K-nearest neighbor\"))),\n      ]),\n      _vm._v(\" \"),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.localConfig.KNearestNeighborsOptionsK,\n            expression: \"localConfig.KNearestNeighborsOptionsK\",\n          },\n        ],\n        attrs: { type: \"number\", min: \"2\", id: \"KNearestNeighborsOptionsK\" },\n        domProps: { value: _vm.localConfig.KNearestNeighborsOptionsK },\n        on: {\n          input: function ($event) {\n            if ($event.target.composing) return\n            _vm.$set(\n              _vm.localConfig,\n              \"KNearestNeighborsOptionsK\",\n              $event.target.value\n            )\n          },\n        },\n      }),\n    ]),\n    _vm._v(\" \"),\n    !_vm.isModelBuilded\n      ? _c(\"div\", { staticClass: \"ui field\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"ui primary fluid button\",\n              attrs: { type: \"button\" },\n              on: { click: _vm.start },\n            },\n            [\n              [\n                _vm._v(\n                  \"\\r\\n        \" +\n                    _vm._s(_vm.$t(\"Build Model and Predict\")) +\n                    \"\\r\\n      \"\n                ),\n              ],\n            ],\n            2\n          ),\n        ])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.isModelBuilded && !_vm.isModelUnsupervised\n      ? _c(\"div\", { staticClass: \"ui field\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"ui primary fluid button\",\n              class: { disabled: !_vm.$parent.isNeedPredict },\n              attrs: { type: \"button\" },\n              on: { click: _vm.start },\n            },\n            [\n              [\n                _vm._v(\n                  \"\\r\\n        \" + _vm._s(_vm.$t(\"Predict\")) + \"\\r\\n      \"\n                ),\n              ],\n            ],\n            2\n          ),\n        ])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.isModelBuilded\n      ? _c(\"div\", { staticClass: \"ui field\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"ui primary fluid button\",\n              attrs: { type: \"button\" },\n              on: { click: _vm.showModel },\n            },\n            [_vm._v(\"\\r\\n      \" + _vm._s(_vm.$t(\"Show Model\")) + \"\\r\\n    \")]\n          ),\n        ])\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./KNearestNeighbors.less?vue&type=style&index=0&id=1295245c&lang=less&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"220033e5\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./KNearestNeighbors.less?vue&type=style&index=0&id=1295245c&lang=less&scoped=true&\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./KNearestNeighbors.less?vue&type=style&index=0&id=1295245c&lang=less&scoped=true&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!./KNearestNeighbors.html?vue&type=template&id=1295245c&scoped=true&\"","let KNearestNeighbors = {\n  props: ['config', 'localConfig', 'utils'],\n  data () {    \n    this.$i18n.locale = this.localConfig.locale\n    return {\n      model: null,\n      dataToShow: null,\n      unknownsPrediction: [],\n    }\n  },\n  watch: {\n    'localConfig.locale'() {\n      this.$i18n.locale = this.localConfig.locale;\n    },\n    'localConfig.KNearestNeighborsOptionsK' () {\n      this.$parent.clearPrediction()\n    }\n  },\n  computed: {\n    isModelBuilded () {\n      return (this.model !== null)\n    },\n    isModelUnsupervised () {\n      return (this.model !== null && this.model === 'unsupervised')\n    },\n  },\n  mounted() {\n//    setTimeout(() => {\n//      this.start()\n//    }, 1000)\n\n    //this.testKNN()\n  },\n  methods: {}\n}\n\nimport KNearestNeighborsMethodsBuild from './KNearestNeighborsMethodsBuild.js'\nKNearestNeighborsMethodsBuild(KNearestNeighbors)\n\nimport KNearestNeighborsMethodsShow from './KNearestNeighborsMethodsShow.js'\nKNearestNeighborsMethodsShow(KNearestNeighbors)\n\nimport KNearestNeighborsMethodsTest from './KNearestNeighborsMethodsTest.js'\nKNearestNeighborsMethodsTest(KNearestNeighbors)\n\nexport default KNearestNeighbors","import mod from \"-!./KNearestNeighbors.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./KNearestNeighbors.js?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-style-loader/index.js!../../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./KNearestNeighbors.less?vue&type=style&index=0&id=1295245c&lang=less&scoped=true&\"","import { render, staticRenderFns } from \"./KNearestNeighbors.html?vue&type=template&id=1295245c&scoped=true&\"\nimport script from \"./KNearestNeighbors.js?vue&type=script&lang=js&\"\nexport * from \"./KNearestNeighbors.js?vue&type=script&lang=js&\"\nimport style0 from \"./KNearestNeighbors.less?vue&type=style&index=0&id=1295245c&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1295245c\",\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./KNearestNeighbors.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FConfigurationPanel%2FKNearestNeighbors%2FKNearestNeighbors.vue&lang=yaml\"\nif (typeof block0 === 'function') block0(component)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/app/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1295245c')) {\n      api.createRecord('1295245c', component.options)\n    } else {\n      api.reload('1295245c', component.options)\n    }\n    module.hot.accept(\"./KNearestNeighbors.html?vue&type=template&id=1295245c&scoped=true&\", function () {\n      api.rerender('1295245c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/ConfigurationPanel/KNearestNeighbors/KNearestNeighbors.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./KNearestNeighbors.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FConfigurationPanel%2FKNearestNeighbors%2FKNearestNeighbors.vue&lang=yaml\"; export default mod; export * from \"-!../../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./KNearestNeighbors.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FConfigurationPanel%2FKNearestNeighbors%2FKNearestNeighbors.vue&lang=yaml\"","import KNN from 'ml-knn'\r\n\r\nexport default function (KNearestNeighbors) {\r\n  KNearestNeighbors.methods.startPredict = async function () {\r\n    return await this.start()\r\n  }\r\n    \r\n  KNearestNeighbors.methods.start = async function () {\r\n    //this.localConfig.modelJSON = null\r\n    this.config.loadingProgress = 0\r\n    // console.log('start', 1)\r\n    \r\n    this.localConfig.modelJSON = null\r\n    this.localConfig.modelEvaluations = []\r\n    let data = await this.$parent.getVectorData()\r\n    \r\n    this.dataToShow = data\r\n    \r\n    if (data.trainSetClasses.length === 0) {\r\n      console.error('No trainSetClasses')\r\n      //throw Error('No trainSetClasses')\r\n    }\r\n    \r\n    // console.log(data)\r\n    //return false\r\n    this.config.loadingProgress = 0.25\r\n    \r\n    // console.log('start', 2)\r\n    //console.log(data.trainSet[0])\r\n    \r\n    // console.log('start', 3)\r\n    if (data.trainSetClasses.length > 0) {\r\n      if (!this.localConfig.modelJSON) {\r\n        this.model = this.buildModel(data)\r\n        this.localConfig.modelJSON = this.model\r\n      }\r\n      else {\r\n        this.model = KNN.load(this.localConfig.modelJSON)\r\n      }\r\n\r\n      //console.log(this.model.toJSON())\r\n\r\n      //console.log(this.model)\r\n      // console.log('start', 5)\r\n\r\n      this.config.loadingProgress = 0.5\r\n\r\n      // console.log('start', 9)\r\n      //console.log(data.testSet)\r\n      let predictVector = await this.getPredictResultsVector(this.model, data)\r\n      let predictResults = await this.getPredictResultsValue(data, predictVector)\r\n      // console.log(predictVector)\r\n      if (predictResults[0] === 'undefined') {\r\n        this.config.loadingProgress = 1\r\n        console.error('predict is undefined')\r\n        return false\r\n      }\r\n\r\n      // console.log('start', 10)\r\n      this.config.loadingProgress = 0.75\r\n\r\n      if (this.$parent.hasModelEvaluated === false) {\r\n        let testSetRowIndexes = data.testSetRowIndexes\r\n        this.unknownsPrediction = []\r\n        let predictVectorToEvalute = predictVector.filter((value, i) => {\r\n          let notMatch = (testSetRowIndexes.indexOf(i) === -1)\r\n\r\n          if (notMatch === false) {\r\n            this.unknownsPrediction.push(value)\r\n          }\r\n\r\n          return notMatch\r\n        })\r\n        this.evaluationResults(data.trainSetClasses, predictVectorToEvalute)\r\n      }\r\n\r\n      //console.log(predictResults)\r\n      this.$parent.setPredictResults(predictResults)\r\n\r\n      this.config.loadingProgress = 0.9\r\n\r\n    } // if (data.trainSetClasses.length > 0) {\r\n    else {\r\n      this.model = 'unsupervised'\r\n    }\r\n    \r\n    if (this.$parent.isModelWindowOpened) {\r\n      this.showModel()\r\n    }\r\n    \r\n    this.config.loadingProgress = 1\r\n    this.config.modelBuildedTime = (new Date()).getTime()\r\n  }\r\n  \r\n  KNearestNeighbors.methods.buildModel = function (data){\r\n    let testSetRowIndexes = data.testSetRowIndexes\r\n    let dataset = data.testSet.filter((row, i) => {\r\n      return (testSetRowIndexes.indexOf(i) === -1)\r\n    })\r\n    \r\n    // console.log(dataset)\r\n    let predictions = data.trainSetClasses\r\n    \r\n    if (dataset.length === 0) {\r\n      dataset = data.testSet\r\n      predictions = dataset.map(item => 'unknown')\r\n    }\r\n    \r\n    if (dataset.length !== predictions.length) {\r\n      console.error('length is not match')\r\n    }\r\n    \r\n    return new KNN(dataset, predictions, {\r\n      k: this.localConfig.KNearestNeighborsOptionsK\r\n    })\r\n  }\r\n  \r\n  KNearestNeighbors.methods.getPredictResultsVector = async function (model, data) {\r\n    let testSet = data.testSet\r\n    let resultVector = model.predict(testSet);\r\n    return resultVector\r\n  }\r\n  \r\n  KNearestNeighbors.methods.getPredictResultsValue = async function (data, resultVector) {\r\n    let trainSetClassesDict = data.trainSetClassesDict\r\n    //console.log(trainSetClassesDict)\r\n    return resultVector.map(index => {\r\n      return trainSetClassesDict[index]\r\n    })\r\n  }\r\n  \r\n  KNearestNeighbors.methods.evaluationResults = async function (train, predict) {\r\n    \r\n    this.$parent.resetModelEvaluation()\r\n    // console.log(train)\r\n    // console.log(predict)\r\n    //console.log(data.trainSetClasses.length, getTrainSetPredicts.length, data.testSetRowIndexes.length)\r\n\r\n    let accuracy = await this.$parent.calcAccuracy(train, predict)\r\n    //console.log(accuracy)\r\n    let accuracyInfo = {\r\n      name: 'accuracy',\r\n      type: 'percent',\r\n      value: accuracy\r\n    }\r\n    \r\n    //console.log(accuracyInfo)\r\n    this.localConfig.modelEvaluations.push(accuracyInfo)\r\n  }\r\n}","//import {euclidean} from 'ml-distance-euclidean'\nconst euclidean = require('ml-distance-euclidean').euclidean\n//const euclidean = MLDistanceEuclidean.euclidean\n\nexport default function (KNearestNeighbors) {\n  KNearestNeighbors.methods.showModel = async function () {\n    // console.log(this.model)\n    if (!this.model) {\n      await this.start()\n      //console.error('no this.model')\n      //return false\n    }\n\n    // --------------------------\n    //console.log(this.dataToShow)\n    let unknownSetRowIndex = this.dataToShow.testSetRowIndexes\n\n    let neighbors = []\n    let neighborsID = []\n    let unknowns = []\n    let unknownsID = []\n    //console.log(unknownSetRowIndex)\n\n    this.dataToShow.testSet.forEach((set, i) => {\n      if (unknownSetRowIndex.indexOf(i) === -1) {\n        neighbors.push(set)\n        neighborsID.push(i)\n      } else {\n        unknowns.push(set)\n        unknownsID.push(i)\n      }\n    })\n\n    if (unknowns.length === 0) {\n      unknowns = [].concat(neighbors)\n      unknownsID = [].concat(neighborsID)\n      unknownSetRowIndex = [].concat(neighborsID)\n    }\n\n    //console.log(neighbors)\n    // console.log(unknowns)\n    if (neighbors.length === 0) {\n      neighbors = unknowns\n      neighborsID = unknownsID\n    }\n\n    // --------------------------\n    let distanceMatrix = unknowns.map(unknownFeature => {\n      let maxDistance = null\n      let distances = neighbors.map(neighbor => {\n        let distance = euclidean(unknownFeature, neighbor)\n        if (maxDistance === null || distance > maxDistance) {\n          maxDistance = distance\n        }\n\n        return distance\n      })\n\n      distances = distances.map(d => {\n        return ((maxDistance - d) / maxDistance)\n      })\n\n      return distances\n    })\n\n    // console.log(distanceMatrix)\n    if (distanceMatrix.length === 0) {\n      throw Error('Distance matrix is empty')\n    }\n\n    let colorMatrix = distanceMatrix.map(unknown => {\n      return unknown.map(d => {\n        return heatMapColorforValue(d)\n      })\n    })\n\n    //console.log(colorMatrix)\n\n    // --------------------------\n\n    let tableHeaderUnknownColspan = 2\n    if (this.model === 'unsupervised') {\n      tableHeaderUnknownColspan = 1\n    }\n\n    // console.log({tableHeaderUnknownColspan, colorMatrix})\n\n    let tableHeader = `<thead>\n  <tr>\n    <th rowspan=\"2\" colspan=\"${tableHeaderUnknownColspan}\" valign=\"bottom\">${this.$t('Unknowns')}</th>\n    <th colspan=\"${colorMatrix[0].length}\">${this.$t('Neighbors')}</th>\n  </tr>\n  <tr>${colorMatrix[0].map((value, i) => `<th>${neighborsID[i] + 1}</th>`).join('')}</tr>\n</thead>`\n\n    let trainSetClassesDict = this.dataToShow.trainSetClassesDict\n    let unknownsPrediction = this.unknownsPrediction\n    // console.log({trainSetClassesDict, unknownsPrediction})\n    if (unknownsPrediction.length === 0) {\n      // let data = await this.$parent.getVectorData()\n      // let predictVector = await this.getPredictResultsVector(this.model, data)\n      // let predictResults = await this.getPredictResultsValue(data, predictVector)\n      // console.log(predictVector)\n      // console.log(data)\n      unknownsPrediction = await this.$parent.getTrainSetPredictsResult()\n      // throw Error('todo')\n    }\n    else {\n      unknownsPrediction = unknownsPrediction.map(i => trainSetClassesDict[i])\n    }\n\n    let tableBody = `<tbody>\n${colorMatrix.map((row, i) => {\n      let thPrediection = `<th>${unknownsPrediction[i]}</th>`\n      if (this.model === 'unsupervised') {\n        thPrediection = ''\n      }\n      return `<tr>\n  <th>${(unknownSetRowIndex[i]) + 1}</th>\n  ${thPrediection}\n  ${row.map((color, j) => {\n        let d = distanceMatrix[i][j]\n        let dText = d\n        dText = Math.round(dText * 100) + '%'\n\n        if (d > 0.7 || d < 0.3) {\n          return `<td style=\"text-align:center;background-color: ${color}; color: white\">${dText}</td>`\n        } else {\n          return `<td style=\"text-align:center;background-color: ${color}\">${dText}</td>`\n        }\n      }).join('')}\n</tr>`\n    }).join('\\n')}\n</tbody>`\n\n    // --------------------------\n\n    // console.log(tableBody)\n\n    let bodyHTML = `<table border=\"1\" align=\"center\">\n    ${tableHeader}\n    ${tableBody}\n</table>`\n    bodyHTML = `<div class=\"tree\">${bodyHTML}</div>`\n    //console.error('[TODO]')\n    //console.log()\n    let title = this.$t('KNN') + ` (` + (new Date()).mmddhhmm() + ')'\n\n    // console.log('KNNModelShow' + this.config.modelBuildedTime)\n    let modelWindow = this.utils.PopupUtils.open({\n      windowName: 'KNNModelShow' + this.config.modelBuildedTime,\n      cssURL: this.modelCSSURL,\n      bodyHTML,\n      size: 'right',\n      //size: 'left',\n      title\n    })\n\n    modelWindow.scrollToTop()\n    modelWindow.scrollToCenter()\n  }\n\n  /**\n   * https://stackoverflow.com/a/27263918/6645399\n   */\n  function heatMapColorforValue(value) {\n    var h = (1.0 - value) * 240\n    return \"hsl(\" + h + \", 100%, 50%)\";\n    //return `rgba(22, 160, 133, ${value})`\n    // rgb(22, 160, 133)\n  }\n}\n","import KNN from 'ml-knn'\n// https://www.npmjs.com/package/ml-knn\n\nexport default function (KNearestNeighbors) {\n  KNearestNeighbors.methods.testKNN = async function () {\n    var dataset = [\n      [0, 0, 0],\n      [0, 1, 1],\n      [1, 1, 0],\n      [2, 2, 2],\n      [1, 2, 2],\n      [2, 1, 2]\n    ];\n    var predictions = [0, 0, 0, 1, 1, 1];\n    var knn = new KNN(dataset, predictions);\n    \n    var dataset = [[0, 0, 0], [2, 2, 2]];\n \n    var ans = knn.predict(dataset);\n    \n    console.log(ans)\n  }\n}"],"sourceRoot":""}